2017-01-10-화 20:00 시작 - 21:45 끝


//신혜주임님 소스 피드백
1. 엘리먼트에 바로 CSS를 적용하지 말 것, 추가되거나 삭제될 때 대응이 어려워진다.
2. footer 같은 경우에도 날짜, 시간 등 그 당시에 필요한 정보만 코딩하지 말고 추후 발생할 문제점까지 계획하에 코딩해야 한다. 추가될 부분을 고려할 것.
3. overflow: hidden;으로 리스트를 나열할 경우 UI에 요소를 추가할 경우 제약이 있다. 그 영역 내에서만 존재하기 때문이다.
4. 하나를 잘 묶어놓은 클래스를 세세한 것까지 생각해 네이밍했을 경우 그 자식들에게는 그렇게 세부적인 네이밍을 하지 않아도 된다.

//선영님 소스 피드백
1. 모듈처럼 소스가 따로 떼어져도 아무데나 작동을 해야한다.

//내 소스 피드백
1. 소스를 묶어서 클래스로 하나로 묶어야 한다. 지금 소스는 디자인이 나올때마다 다른 마크업을 해주어야 하기 때문에 변화하기가 쉽지않다. article.html 과 news.html의 구조를 하나로 맞출 것.
2. posts-header에 제목을 쓰지 말 것, 써도 클래스를 넣어주는 게 좋다. 목록에는 웬만하면 쓰지 않는 것이 좋다.

//총정리
1. [사진] 상품명, 상품에 관한 간략한 설명, 가격, 카드 할인가, 판매가, 원산지, 배송정보, 옵션, 수량
-> 코딩할 때 들어갈 것들을 추리고 정리한 뒤, 그것이 들어간다고 가정하에 코딩을 해야한다.
-> 추후 들어갈 것을 꼭 생각하고 코딩할 것!

2. 페이지가 1000페이지가 넘어갈 경우, 상황마다 코딩을 계속해줄 수는 없는 것이다.
섹션을 만들 때 모듈을 어떤 순으로 배치하는 것이 좋을지를 고민해보아야 한다.

3. 디자이너가 주는 작업물이 간격이 다 다를 수밖에 없는데, 그럴 때 4px 베이스라인을 사용하여 근사치를 구해 사용한다.

4. 보통 48px로 아이콘을 만드는데, 4px 베이스라인을 기준으로 만드는 것이다. 16px x 3을 하면 48px이 나온다.
16px, 24px, 32px, 48px, 64px 등으로 나간다. 4px을 기준으로 디자인을 하다보면 깔끔한 UI가 나올 수 있다.

총정리 4. 참고자료
http://harmony.intuit.com/grid/
https://design.atlassian.com/brand/typography/

5. 720에서의 16px이 640px에서 18px과 동일하다. 16px 곱하기 1.125는 18px이 나온다.

6. 전체 line-height를 1.5로 한다는 것은 굉장한 자신감을 표명하는 뜻이다. 

7. 기본적으로 reset은 안해주는게 좋다. reset을 하면 모듈화로 시켜놓은게 다 망가지기 때문이다.
다른데서는 reset한 값들이 다 다르기 때문이다.


//다음 주 숙제
1. 버튼 모듈 하나 만들어서 리셋까지 해오기, 버튼을 만든 후 그렇게 만드는 이유도 설명하기